version: 0.2
runtime-versions:
  java: corretto8
phases:
  # install:
  #   runtime-versions:
  #     docker: latest
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - echo $AWS_DEFAULT_REGION
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin ${aws_account_id}.dkr.ecr.${aws_region}.amazonaws.com
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=$${COMMIT_HASH:=latest}         
  build:
    commands:
      - echo Build started on `date`
      - echo Building the jar
      - mvn package
      - echo Building the Docker image...
      - docker build -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - printf '{"ImageURI":"%s"}' $REPOSITORY_URI:$IMAGE_TAG > imageDetail.json  # https://docs.aws.amazon.com/codepipeline/latest/userguide/file-reference.html#file-reference-ecs-bluegreen
      - cat imageDetail.json
      - docker logout
      - echo ******* BEFORE TASK DEFINITION TEMPLATE *******
      - cat taskdef.json.tpl
      - envsubst < taskdef.json.tpl > taskdef.json
      - echo ******* TASK DEFINITION *******
      - cat taskdef.json
      - echo ******* BEFORE APP SPEC TEMPLATE *******
      - cat appspec.yaml.tpl
      - envsubst < appspec.yaml.tpl > appspec.yaml
      - echo ******* APP SPEC DEFINITION *******
      - cat appspec.yaml
artifacts:
    files: 
    - imageDetail.json
    - appspec.yaml
    - taskdef.json
    secondary-artifacts:
      definition_artifact:
        files:
        - appspec.yaml
        - taskdef.json
      image_artifact:
        files:
        - imageDetail.json
cache:
  paths:
    - '/root/.m2/**/*'
